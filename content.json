{"pages":[{"title":"关于","text":"关于自己目前是一名高中学生狗（20.2.23），而且是个肥宅。 语言的话写Python、C/C++，现在在学golang，C/C++学到心态爆炸估计无限期往后拖。 然后就没了。 关于Blog这个Blog就用来见证一下的我技术学习之路吧，顺便当一下我的空间，晒晒生活233333。 PS:顺便请你打个赏吧hhh 重要说明！！我不会修电脑也不会盗号请不要找我，我只是一个什么都不会的废宅。修电脑可以去找电脑店，盗号可以去找那种比较高的“黑客”朋友们。像这样的高级操作我什么都不会，并且我也不认识这样的人。若要技术交流很欢迎你联系我哦！ 联系方式Telegram：https://t.me/Char_XD","link":"/about/index.html"},{"title":"分类","text":"","link":"/categories/index.html"}],"posts":[{"title":"ESP32","text":"今天喜闻乐见的找了一万年我这个ESP32的针脚图，找不到是最真实的，并夕夕的东西果然不敢恭维。 然后我把一些搜集的资料记录了一下。 这是开发板的MicroPython官方驱动下载链接：点我 针脚图解我的ESP32是ESP32Devkit v1,针脚图就丢下面了防止以后找不到～ 对一些针脚的注释 引脚 输入 输出 作用 3V3 x ✓ 3.3v output GND ✓ x - GPIO0 pulled up ✓ outputs PWM signal at boot GPIO1 TX pin ✓ debug output at boot GPIO2 ✓ ✓ connected to on-board LED GPIO3 ✓ RX pin HIGH at boot GPIO4 ✓ ✓ GPIO5 ✓ ✓ outputs PWM signal at boot GPIO6 x x connected to the integrated SPI flash GPIO7 x x connected to the integrated SPI flash GPIO8 x x connected to the integrated SPI flash GPIO9 x x connected to the integrated SPI flash GPIO10 x x connected to the integrated SPI flash GPIO11 x x connected to the integrated SPI flash GPIO12 ✓ ✓ boot fail if pulled high GPIO13 ✓ ✓ GPIO14 ✓ ✓ outputs PWM signal at boot GPIO15 ✓ ✓ outputs PWM signal at boot GPIO16 ✓ ✓ GPIO17 ✓ ✓ GPIO18 ✓ ✓ GPIO19 ✓ ✓ GPIO21 ✓ ✓ GPIO22 ✓ ✓ GPIO23 ✓ ✓ GPIO24 ✓ ✓ GPIO25 ✓ ✓ GPIO26 ✓ ✓ GPIO27 ✓ ✓ GPIO32 ✓ ✓ GPIO33 ✓ ✓ GPIO34 ✓ input only GPIO35 ✓ input only GPIO36 ✓ input only GPIO39 ✓ input only 按钮的作用 EN：复位按钮。 Boot：下载按钮。 按下Boot键并保持，同时按一下EN键（此时不要松开Boot）进入”固件下载“模式，通过串口下载固件。 更详细的可以去看看官方文档。","link":"/2020/02/29/ESP32/"},{"title":"ESP32入门到入土 1","text":"开一个坑来记录一下我玩esp32的路。 我电脑的环境如下 系统：Manjrao19 Python版本：3.8.1 Shell：fish 这一篇来说一下刷固件什么的以及我踩的坑。 我基于MicroPython开发的，ArdoinoC要去学C短期玩玩开发板去重新学一门语言好累，加上C那玩意搞得我头皮发麻就没这个想法了，后来发现Python也可以写，那不何乐而不为？ 烧录工具(esptool)安装我们刷MicoPython的工具叫esptool。为了方便管理吧，我就为esp32单独开了一个venv。其实是esptool和我的一个包冲突。话不多说我么先来配置一下virtualenv的环境。 1234$ virtualenv esp32$ chmod 755 esp32/bin/activate$ ./acrivate(esp32)$ pip install esptool 我来稍微解释一下以上命令的意思 第一行是说在当前目录下建立一个esp32的虚拟环境。 第二行是把启动虚拟环境的文件给予可执行权限。 第三行是启动虚拟环境,若启动成功了终端会加一个(环境名)的前缀,就像第四行前一样。 第四行是在虚拟环境中安装esptool。 擦除Flash如果你的ESP32刚到手上应该先去吧他的Flash擦除一下，这样才能刷如MicroPython。擦除过程非常简单，但是我搞了半天踩了坑，淦。 首先我们先去看看我们esp32用了那个串口 12$ ls /dev/ttyUSB*crw-rw---- 1 root uucp 188, 0 3月 5 10:07 /dev/ttyUSB0 输出就只有一个所以很明显我的板子用的是ttyUSB0这个串口。 有了串口我们就可以真正的去擦Flash了 12345678910111213141516(esp32)$ sudo esptool.py --port /dev/ttyUSB0 erase_flashesptool.py v2.8Serial port /dev/ttyUSB0Connecting.....Detecting chip type... ESP32Chip is ESP32D0WDQ6 (revision 1)Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme NoneWARNING: Detected crystal freq 41.01MHz is quite different to normalized freq 40MHz. Unsupported crystal in use?Crystal is 40MHzMAC: 24:6f:28:b6:14:04Uploading stub...Running stub...Stub running...Erasing flash (this may take a while)...Chip erase completed successfully in 9.2sHard resetting via RTS pin... 记得命令跑起来的时候按一下板子上的boot键，我当时就没按导致一直报错。如果你的输出和我差不多那估计就擦好了。 固件刷入固件我们首先去MicroPyhton官网去下,我不记得在那看到有个大佬说固件貌似v1.10及以上的版本刷不进去。不知道是不是真的，我为了尽量不浪费时间就下了v1.9.4。要是各位愿意可以去试试，要是可以记得评论和我说一下，谢谢了。 下载好我们去看看固件的存放路径,我的是~/Download/esp32-idf3-20180511-v1.9.4.bin。 记住以后就可以开始刷了,记住把我的串口号和固件路径换成你的，烧录的时候也要按一下boot键。 12345678910111213141516171819202122(esp32)$ esptool.py --port /dev/ttyUSB0 --baud 460800 write_flash --flash_size=detect 0 ～/Download/esp32-idf3-20180511-v1.9.4.binesptool.py v2.8Serial port /dev/ttyUSB0Connecting........_____...Detecting chip type... ESP32Chip is ESP32D0WDQ6 (revision 1)Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme NoneCrystal is 40MHzMAC: 24:6f:28:b6:14:04Uploading stub...Running stub...Stub running...Changing baud rate to 460800Changed.Configuring flash size...Auto-detected Flash size: 4MBCompressed 982832 bytes to 609724...Wrote 982832 bytes (609724 compressed) at 0x00000000 in 13.9 seconds (effective 565.0 kbit/s)...Hash of data verified.Leaving...Hard resetting via RTS pin... 要是输出和我一样证明你固件就刷进去了。 串口交互我使用的是picocom，这玩意是真的小小到吓到我了，就0.05MiB。我当时看到都懵逼了。 废话不多说我们先开始下载，manjaro的话pacman一下就能下，其他平台我没搞所以动动小手去百度一下就行。安装完成的话我们就可以开始与板子连接交互了！ 123456789101112131415161718192021222324252627$ picocom /dev/ttyUSB0 -b 115200picocom v3.1port is : /dev/ttyUSB0flowcontrol : nonebaudrate is : 115200parity is : nonedatabits are : 8stopbits are : 1escape is : C-alocal echo is : nonoinit is : nonoreset is : nohangup is : nonolock is : nosend_cmd is : sz -vvreceive_cmd is : rz -vv -Eimap is : omap is : emap is : crcrlf,delbs,logfile is : noneinitstring : noneexit_after is : not setexit is : noType [C-a] [C-h] to see available commandsTerminal ready 这样输出说明恭喜你按一下Enter你就可以开始交互了！ 你可以输入print(‘hello world’)来实验一下。 要是想退出的话你去按Ctrl +C的话木大木大木大，picocom退出要按Ctrl+A然后再按Ctrl+Q。 问题记录 在刷入和清楚的时候记得在命令执行后按boot键（boot键是esp32的下载键） 按boot键的时机。经过我踩坑时的那么多次尝试，如果你执行命令之后不去按boot键会跑进度条，在进度条时按也是没事的，要是进度条跑慢就会报这样的错。（进度条就是Connecting那行） 12345esptool.py v2.8Serial port /dev/ttyUSB0Connecting........_____....._____....._____....._____....._____....._____....._____A fatal error occurred: Failed to connect to Espressif device: Invalid head of packet (0x55) 我感觉第二条是屁话hhh。","link":"/2020/03/05/ESP32%E5%85%A5%E9%97%A8%E5%88%B0%E5%85%A5%E5%9C%9F-1/"},{"title":"hexo的一个坑 2020.5.7(估计一段时间就会好)","text":"就在刚刚我上传博客的时候hexo报错了。报错信息如下： 123456(node:6857) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency(node:6857) Warning: Accessing non-existent property 'column' of module exports inside circular dependency(node:6857) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency(node:6857) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency(node:6857) Warning: Accessing non-existent property 'column' of module exports inside circular dependency(node:6857) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency 我去大概Google了一下发现hexo不能在最新版的nodejs上跑。目前错误版本是14.2，降级至12就行，其他什么都不用搞非常的舒服。就这样，估计hexo过一段时间就可以修复错误吧，管他的能用就行。","link":"/2020/05/07/hexo%E7%9A%84%E4%B8%80%E4%B8%AA%E5%9D%91-2020-5-7-%E4%BC%B0%E8%AE%A1%E4%B8%80%E6%AE%B5%E6%97%B6%E9%97%B4%E5%B0%B1%E4%BC%9A%E5%A5%BD/"},{"title":"Golang中package/import的使用","text":"最近入坑了Golang对package的使用很是疑惑，在网上看到了一个很好的文章解释。刚刚看完我记录一下以免忘记。 首先我们用go mod来创建一个项目，具体怎么创建我就不写了（毕竟本篇内容不是介绍go mod的）。项目树状图如下： 12345├ Project 项目文件| go.mod | main.go | ├ pake 存放包用的目录| | Hello.go 自定义的包 Package的使用我们来定义一个自定义的包叫Hello.go存放在工程目录的pake文件夹下,源码如下： 1234567891011package pakeimport \"fmt\"func init(){ fmt.Println(\"Hello world!\")}func Hello() string { return \"hello\"} 在我们自定义的包中，package后所跟的应为包所处文件夹的名称，比如这个Hello.go是包含在pake这个文件夹中，所以我们package后跟pake。 import的使用最后我们写一个main包来调用这个包。源码如下： 12345678910package pakeimport （ \"fmt\" \"Project/pake\"）func main(){ fmt.Println(pake.Hello())} go mod定义的项目导入包，写从工程文件夹到包所处的文件夹的路径即可，比如我们的Hello这个包就在工程文件夹Project的pake文件夹中，所以我们写做Project/pake 跑了一下程序成功输出了Hello world！说明成功的导入了。 然而导入的操作还不止这一种操作，以下我们来说一下几种其他的操作: 定义别名12345678910package pakeimport （ \"fmt\" myPake \"Project/pake\"）func main(){ fmt.Println(myPake.Hello())} 这种导入方式可以用来省懒，如果包名太长就可以自定义一下。 点导入12345678910package pakeimport （ \"fmt\" . \"Project/pake\"）func main(){ fmt.Println(Hello())} 用.来导入的话可以直接将包中的方法注册到当前的包中，用是可以直接调用不用在前面写包名前缀 下划线引用12345678910package pakeimport （ \"fmt\" _ \"Project/pake\"）func main(){ fmt.Println(pake.Hello())} _ 是包引用操作，只会执行包下各模块中的 init 方法，并不会真正的导入包，所以不可以调用包内的其他方法。 所以我们这一段代码会报错！！！","link":"/2020/03/09/Golang%E4%B8%ADpackage-import%E7%9A%84%E4%BD%BF%E7%94%A8/"},{"title":"关于软件收集用户信息的那些事","text":"这件事的导火索源于上次回形针事件我删了QQ。事情平息下来后我又把QQ给下回来了其实是嫌麻烦不方便联系别人。下回来之后我不知道为什么突然脑抽没有给他所有的权限比如说定位，我当时想一个聊天软件刚装上找我要定位权限是个什么鬼操作，于是就拒绝了。Flyme8的权限拒绝是当次的，所以发生了下面的事情。我没事侧滑打开我的名片界面的时候就会找我申请一次定位权限，说明他当时调用了定位功能。这就很nm的玄幻了，我侧滑你要我定位干什么。后来我发现侧滑会隔一端时间申请一次定位，有时候开点别的与定位功能无关的功能时也会申请定位权限。 想到这以后感觉有点可怕，有位友人我感觉病态的谨慎，我感觉有点理解了。事实证明大厂的软件也不能相信。最近有意思关注安全的新闻，发现BAT的软件真的已各种缘由频频上整改名单。最近不还爆出万豪酒店的用户个人信息和入住登记什么的信息泄露嘛如果你不知道万豪是什么不要问我我是穷孩子我也不知道，只是听报道上感觉好强的样子（笑）。这说充分明大厂虽然是大，那是资本层面上的，不是安全层面上的，个人信息安全还是得看自己。 但这与当前的社会非常的抵触，人们都不去正视网络安全方面，包括以前的我。当前社会的风气是人们在不知情的情况下贩卖自己的个人隐私去换取生活便利。开个玩笑，要是淘宝愿意可以在你把自己家地址填错的情况下帮你改成正确的。虽然我觉得这辈子都不可能出这样的功能，但是这真实到令人可怕。别人没事可以找上我家，这种感觉就非常的可怕，做一些事情都有点不自然。毕竟我的大部分认识的人都不知道我家在哪，他们也没必要知道。 说回正题，我认为目前全社会都要正视网络安全的问题，信息泄漏的人最好反思一下自己为什么泄漏的。Android最新有个功能挺好的，我当时看着了就有点想让国内厂商赶紧跟进。就是应用的权限申请可以设置只对当次申请有效。对于Flyme还在基于Android8更新的系统估计这辈子都指望不上了。 有的人我不理解前会觉得他们非常的古怪喜欢顾弄玄虚，在内心会抵触他们，但是我在生活的摧残下明白他们所做所为是为何时我也渐渐的成为了那些古怪的人。而那些在生活中给我以道德绑架灌输他们的观念的人是真的恶心这句话假码和正文有关系，反正就是现在想到的。 目前能保护隐私的地方尽量吧，前几天不还出现某公司员工拿用户数据卖钱的事情吗。软件公司不需要知道的事情尽量不告诉他们。保护隐身从自身做起吧。 这是真正的胡扯部分： 最近发现自己点沉迷与看经济类和世界局势分析的视频，我是不是也成了油腻的大叔了。这里安利一下半佛仙人，我感觉他做的视频质量不错，说话又好听。我是从他讲瑞·民族之光·幸咖啡割美帝国的韭菜补贴国人喝上咖啡的那个视频开始看的。貌似最近瑞·民族之光·幸咖啡的忽悠被美股的韭菜们发现了股价大跌，我想有生之年也要去享受一下美国韭菜送给我的咖啡，民族之光挺住！对于这种割外国韭菜振兴中华的公司请务必多来点其实就是想白嫖。突然发现天天水博客水出来的字数比我写作文的字数还多，写的还快，一股脑想都不用想就写出来了。真的绝了，今天语文作业有个300字的小作文我感觉又要写不完了（哭）","link":"/2020/04/04/%E5%85%B3%E4%BA%8E%E8%BD%AF%E4%BB%B6%E6%94%B6%E9%9B%86%E7%94%A8%E6%88%B7%E4%BF%A1%E6%81%AF%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/"},{"title":"关于回形针，发个牢骚","text":"最近貌似一个b站上的科普团队回形针PaperClip辱华还有破坏中国地图完整。 我昨晚睡前日常刷一下b站看看有没有什么错过的好视频，最近玩MC玩的太凶了b站没怎么看过就睡前看看。我看到回形针发了一个道歉动态，非常懵逼，就去看了一下。大概就是说有人觉得他们言行不对，觉得他们说了巴西森林面积减少是怪中国人吃肉。视频也给删了，具体什么样我也不晓得我也不评论。还有一个就是他们早期一个视频中在Youtube上发的一个视频把中国地图上的台湾给抹掉了。嗯这些是我也懒得想懒得评论，不知道最近怎么越来越懒了。 但是吧，我特么在哪都看到关于这个事情的东西就非常烦人了，各个地方都是要讨伐的，下面全是骂人的评论，这对我的互联网体验非常的不友好。这事情要解决直接去举报就好了，到处去虚张声势有什么意思，问题解决的了吗？所以我现在有点反感社交软件，我把QQ也删掉了，微信要交作业没办法就没删了。我自己去静静吧，等风波过去了我再把QQ下回来。 B站上也是，也到处都是，我有点想开个小号看了，奈何没有手机号了。对了，B站最近风气也越来越怪了，在私下出现了一个捶人区，揭发其他UP以前做过的错事，捶人的UP名字我就不说了都知道，以免被什么正义凌然的人看见被人肉。还是原来的那句话，有事去举报，没事别乱bb。这种事我觉得就和甜豆腐脑与咸豆腐脑哪个好吃一样，赤裸裸的引战行为。人哪有没做过坏事，自己埋藏在心中改过自新就好了。我去年看到b站给我推送这种视频我都想退站了，目前没有找到墙内有什么好的视频网站，找到了我估计差不多该退了。 事情就是这样，没事发发牢骚。","link":"/2020/03/23/%E5%85%B3%E4%BA%8E%E5%9B%9E%E5%BD%A2%E9%92%88/"},{"title":"fish运行venv的坑","text":"今天本来打算开始折腾ESP32结果我的esptool和我其他的python包冲突。于是我就去用venv创了一个虚拟环境来搞ESP32。结果发现我特么启动不了环境。他启动环境的文件是&lt;venv&gt;/bin/activate，结果我的fish不兼容bash的语法就打不开这个bash的脚本，我换了一下bash的脚本果然跑起来了。But那个bash太捞了我看不上于是我就去网上搜，发现venv有fish版的脚本是bin目录下的activate.fish。我兴致勃勃的跑去跑结果我的shell给我又包了错。。。。 1234&lt;/&gt; ~/G/EPS32 ./esp32/bin/activate.fish Failed to execute process './esp32/bin/activate.fish'. Reason:exec: Exec format errorThe file './esp32/bin/activate.fish' is marked as an executable but could not be run by the operating system. 我一看，嗯？？？这不是和我运行bash的报错一样嘛？？？？这就非常迷惑了。我就继续去网上找资料，我发现py官网居然有venv的文档，nb！我在文档里看到一个教我启动脚本的，我输了一下那个命令wtf？跑起来了。非常迷惑，那命令和我的差不多。。。。就是多了一个空格，我也不知道是什么神仙操作。。。。 顺便官方的各个平台运行虚拟环境方法的表格为下： 平台 Shell 用于激活虚拟环境的命令 POSIX bash/zsh $ source /bin/activate fish $ . /bin/activate.fish csh/tcsh $ source /bin/activate.csh PowerShell Core $ /bin/Activate.ps1 Windows cmd.exe C:&gt; \\Scripts\\activate.bat PowerShell PS C:&gt; \\Scripts\\Activate.ps1 另外官方文档对venv的介绍写的不错，里面教程感觉不错就顺便也贴这了（点我）","link":"/2020/03/05/fish%E8%BF%90%E8%A1%8Cvenv%E7%9A%84%E5%9D%91/"},{"title":"对自己近期的反思","text":"最近沉迷于Minecraft无法自拔，自己肝了一个1.14.4的档，大概步过了前期了。还有一个服务器档一周目已经完结，是1.15.2的档。前不久还把正版给补上了，感觉不错。玩了这么长时间差不多把新版本已经熟悉了，有打算自己在大学期间去开个生电服玩，朋友不多估计服务器不会用好多钱。突然发现朋友不多的好处是省钱(误)用某人的话我现在就是每天25小时高强度了。今晚比较无聊泡了一晚上b站，突然发现自己关注的鸽子们居然在我玩mc的期间更新了一堆视频。我就看嘛，越看越尼玛离谱。我比较喜欢看科普视频，最近莫名迷上了分析当下局势分析，历史，经济之类的东西。一起看到这玩意就想睡觉，不知道为什么莫名其妙就喜欢上了。真应了男人是善变的这句话hhh。我看了这些up产出的视频我去那是对我智商的碾压，我犹如一个智障一样的，他们说的东西直接把我整傻了，颠覆了我对好多事情的认知。我以前看到的东西太片面了，对很多东西的认知都是以偏概全。我现在真正的认识到我们在见证历史这句话的意思了，原本我以为只是今年出现了很多的灾害而见证历史，却不知是我们人类发展的历史。 对于我这浅薄的知识储备我快要自闭了，打算买点书康康了，恶补一下。天天打游戏也不太好，至少前不久学得半吊子golang现在毛线都不记得了，比较难受。至于linux还好是我的日常桌面系统不然我估计啥玩意都不记得了，感觉自己现在和文盲差不多了。和大城市的小朋友们交流了一下，自己知道的东西，虽然他们不擅长计算机但是也都多多少少有了解，果然教育差距还是那么大，原来对自己有那么的自满，飘飘然，现在对这种憨批行为表示强烈的后悔。前不久b站的那个推荐书的活动挺好的，我看好多人都推荐了一些自己喜欢的对自己有用的书。我打算去参考一下买几本增加一下自己的知识储备，至少以后不要让自己都认为自己是文盲，这是多么嘲讽的事。","link":"/2020/05/07/%E5%AF%B9%E8%87%AA%E5%B7%B1%E8%BF%91%E6%9C%9F%E7%9A%84%E5%8F%8D%E6%80%9D/"},{"title":"在Linux服务器下搭建一个Minecraft服务器","text":"朋友最近租了一台服务器在那闲置，刚好我这几天又回坑mc，我打算用那个服务器开个服供我们俩玩。搭建服务器我们就只要用docker非常的简单，有兴趣你可以自己也搭一个玩。 SSH的坑首先就是把ssh搞一下，咱的ssh一段时间不操作的话服务器会断开连接非常蛋疼，经常下东西下一半我连接就断了。这个解决方案百度上很多，我就记录一下我用方案把。 我是用修改Config文件的方法去解决的，听说可以命令后带参数，但是我这种懒人肯定使用一劳永逸的方法啦～ 我们找到所在用户的.ssh目录，如果是root用户就在/root/.ssh下创建一个config文件 1$ nvim ~/.ssh/config 在这个文档中加一句 1ServerAlinveInterval 60 保存退出，然后重启一下shell即可。 安装dockerdocker是一种虚拟化容器，可以快速搭建一个环境。 我这个服务器是Ubuntu的，包管理器和CentOS不一样，所以CentOS安装步骤就自己去搜一下吧。 Ubuntu用的是apt，安装的话就一行命令即可。 1$ sudo apt install docker.io 查看安装成功就用万年查版本。 123456789101112131415161718192021222324252627282930313233343536$ snap info dockername: dockersummary: Docker container runtimepublisher: Canonical✓contact: snappy-devel@lists.ubuntu.comlicense: Apache-2.0description: | Build and run container images with Docker. This build requires all files that Docker uses, such as dockerfiles, to be in $HOME. Keep files there for 'docker build', 'docker save' and 'docker load'. This snap is built by Canonical based on source code published by Docker, Inc. It is not endorsed or published by Docker, Inc. Docker and the Docker logo are trademarks or registered trademarks of Docker, Inc. in the United States and/or other countries. Docker, Inc. and other parties may also have trademark rights in other terms used herein.snap-id: sLCsFAO8PKM5Z0fAKNszUOX0YASjQfeZchannels: stable: 18.09.9 2019-11-18 (423) 126MB - candidate: 18.09.9 2020-03-18 (428) 126MB - beta: 18.09.9 2020-03-18 (428) 126MB - edge: 18.09.9 2020-03-18 (428) 126MB - 17.09/stable: – 17.09/candidate: 17.09.1-ce 2017-12-22 (232) 44MB - 17.09/beta: 17.09.1-ce 2017-12-20 (232) 44MB - 17.09/edge: 17.09.1-ce 2017-12-14 (232) 44MB - 17.06/stable: 17.06.2-ce 2017-12-22 (179) 43MB - 17.06/candidate: 17.06.2-ce 2017-10-10 (179) 43MB - 17.06/beta: ↑ 17.06/edge: 17.06.2-ce-1 2018-01-03 (237) 44MB - 17.03/stable: 17.03.2-ce-1 2017-07-20 (159) 42MB - 17.03/candidate: 17.03.2-ce-1 2017-06-30 (159) 42MB - 17.03/beta: ↑ 17.03/edge: 17.03.2-ce-1 2017-06-30 (159) 42MB - 安装Minecraft服务器首先就拉取一下映像 1$ docker pull itzg/minecraft-server 下载过程可能有点慢，耐心等一下就好。今天搞这个最开始用别的方法等了3个小时最后换这个方法半小时不到就搭建好了感动世界。 拉取完毕后能直接运行啦 123456docker run -d \\-p 25565:25565 \\-e EULA=TRUE \\-e VERSION=1.13.3 \\-v ~/mc-server:/data \\--name mc itzg/minecraft-server 为了看得清楚就分段写了。解释一下参数： -p后是mc服务器的端口，是将容器的端口映射到服务器端口上（前是容器端口，后是服务器端口） 第一个-e是同意EULA协议 第二个-e是游戏的版本，我这里刚回坑太高的版本玩的怀疑人生就1.13.2了 -v是mc服务器的数据存储位置，把冒号前的地址改为你的存放路径即可 –name是指定容器名这里是mc 踩坑记录如果你和我一样是Ubuntu18.04那能运行是出了鬼了。这里小小的踩了坑，我在网上找到了解决方案我就搬运一下啦，懒得自己写(原地址)。 在Ubuntu18.04安装docker之后，以登陆用户身份启动docker出错： 执行docker相关命令（如docker ps -a），出现 1Got permission denied while trying to connect to the Docker daemon socket at unix:///var/run/docker.sock: Get http://%2Fvar%2Frun%2Fdocker.sock/v1.39/containers/json?all=1: dial unix /var/run/docker.sock: connect: permission denied 原因是：docker进程使用Unix Socket而不是TCP端口。而默认情况下，Unix socket属于root用户，需要root权限才能访问。 解决方案1、使用sudo获取管理员权限，运行docker命令，如： 1sudo docker ps -a 2、在安装docker时，已经创建了一个名为docker的用户组，守护进程启动的时候，会默认赋予用户组docker读写Unix socket的权限，因此只要将当前用户加入到docker用户组中，那当前用户就有权限访问Unix socket了，进而也就可以执行docker相关命令 123sudo gpasswd -a $USER docker #将登陆用户加入到docker用户组中newgrp docker #更新用户组docker ps -a #测试docker命令是否可以使用sudo正常使用 如果用户组docker不存在（安装完一般就有了），则可先创建该用户组： 1sudo groupadd docker #创建docker用户组 (PS:你按命令走下来估计问题就解决了，然后run一下) 关于非正版登录有些小伙伴家境贫寒付费不起就玩盗版，如果是默认的话盗版是无法登录的。我们需要去修改一下服务器存放目录下的server.properties文件中的online-mode把后面的ture改成false即可。","link":"/2020/03/20/%E5%9C%A8Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AAMinecraft%E6%9C%8D%E5%8A%A1%E5%99%A8/"},{"title":"创建swap分区","text":"这要从我安装系统的时候说起，我当时比较傻不知道要分swap分区。后来发现内存不够用了网上都说要分区，就各种去找教程去分。后来搞好了，也不麻烦非常的快乐。记录一下以免以后又到处找，虽然一搜一堆。 首先我们要分一块区域给swap，命令最后的分区是分给swap分区的大小，这里是8GB。这个分区的大小差不多是你内存的两倍就行。 123$ dd if=/dev/zero of=/swapfile bs=1k count=8192000$ mkswap /swapfile$ swapon /swapfile 之后我们就修改一下/etc/fstab文件，使swap开机的时候会自动挂载。在这个文件结尾添加此句即可。 1/swapfile swap swap defaults 0 0 保存一下重启，在终端用free命令看看swap挂载成功没。swap就是那个交换内存，如果不是0了就说明挂载成功。","link":"/2020/03/07/%E5%88%9B%E5%BB%BAswap%E5%88%86%E5%8C%BA/"},{"title":"心态炸裂","text":"今天在配置rust的环境又是掉坑里，烦躁！！！ 我觉得要是谁推荐你去学计算机你可以锤死他了，本来好好的心情天天被他破坏掉真的烦人。 我想我以后要买一套耐砸的键盘和鼠标（暴躁程序员以上线） 顺便我的键盘和鼠标 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 HP -1 我在重新安装rustup的过程中写了这个，不知道我什么时候可以搞的好，淦！！！","link":"/2020/02/27/%E5%BF%83%E6%80%81%E7%82%B8%E8%A3%82/"},{"title":"帐号一次性密码","text":"今天突然来了脑洞，关于平时借号。有时候把QQ借给别人会暴露自己的所有密码（有些人所有平台的密码都是一模一样的）。还有人会乱翻我的收藏夹,不要瞎想没有奇怪东西。所以我就想了想有什么东西可以解决这个问题呢？后来想出了一次性密码这种操作。 关于一次性密码有以下几种功能，记录下来以供以后需要的时候能够用上： 一次性的密码要有时效性：比如用号主设置了1个小时那这个帐号也就只能使用一个小时，过时就自动退出并删除该密码。 一次性密码使用权限:有些熊孩子把人家号一借到手就各种去窥探他人隐私，这种的话号主那他也没办法，于是就可以在密码生成的时候可以去指定可以使用的一些场景，比如只用与聊天的话就选择聊天权限其他的就不给予，类似与电脑系统的来宾账户？ 一次性密码使用时的轨迹：我觉得借号给别人最好去记录一下对方用了自己的帐号做了什么，我就见过以前计算机课有人下课后QQ没关，有人那他的号骂人。号主最好监视对方拿自己的帐号做了什么，如果是违法活动可以给自己留下清白的证据。 自我感觉想法不错，不知道以后能不能用上，先记录下来再说。","link":"/2020/03/01/%E5%B8%90%E5%8F%B7%E4%B8%80%E6%AC%A1%E6%80%A7%E5%AF%86%E7%A0%81/"},{"title":"Manjaro配置","text":"我电脑比较神奇，系统经常boom。重装之后我又不记得自己原来电脑上有啥，于是就有了这篇备忘录。 我的manjaro是gnome桌面的，我感觉开箱即用非常快乐就用这个桌面了。（但这几天我看见别人的KDE桌面好强，加个插件各种高级操作，i了i了） 分区挂载分区的话我在网上收集了一点资料，大概就这样分： 大小 挂载点 用途 40G / 用于存放系统相当于windows的C盘 8G /swap 一般设为电脑内存的2倍 600MB /boot 引导分区 剩余所有空间 /home 用户存储数据用 （转载于此：点我） 换源然后就是换源非常，喜闻乐见的的几行代码，傻瓜式操作。 我感觉manjaro的比其他系统人性化很多！因为他有窗口！！ 123456789101112sudo pacman-mirrors -gsudo pacman-mirrors -c China -m rank# 然后等一下就会弹出窗口，按速度自己选吧～nano /etc/pacman.conf# 在文件内添加这三行[archlinuxcn]SigLevel = Optional TrustedOnlyServer = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch#再安装一下archlinuxcn-keyringsudo pacman -S archlinuxcn-keyring 之后同步同步u1s1看心情，等有时间更新一样的: 1sudo pacman -Syyu 中文输入法我用的是google拼音输入法。搜狗在manjaro上有bug，我懒得去搞，然而这个用来这么久除了没词库，其他我感觉还行。（词库貌似可以手动加，但是我懒） 1234567sudo pacman -S fcitx-googlepinyin fcitx-im fcitx-configtool# 安装好了添加一下配置文件，注销系统就可以用了。nano ~/.xprofile# 添加以下内容export GTK_MODULE=fcitxexport QT_IM_MODULE=fcitxexport XMODIFIERS=\"@im=fcitx\" Fishellfish这个shell我挺喜欢的没有zsh那么重量，然后对我来说该有的功能都有。入了这玩意以后我就换不掉了。 安装非常简单就： 1sudo pacman -S fish fish要配合omf一起用比较好，安装也是一条命令的事，懒人福利，快乐！ 1curl -L github.com/oh-my-fish/oh-my-fish/raw/master/bin/install | fish 我用的是默认的那个皮肤，挺好的。其他的插件可以自行了解一下。 Clash（你猜这是啥）安装安装还是一行命令的事： 1sudo yay -S clash （没有yay就自己改成pacman，下面也是一样的） 然后clash命令执行一下让他建立配置文件， 配置文件在~/.config/clash/ 之后把自己的配置文件复制进来就行。 开机自启下面是将clash设置为开机自启，我们使用的是systemd。 在/lib/systemd/system/目录下创建clash@.service文件 1sudo nano /lib/systemd/system/clash@.service 写入一下内容（不用修改）并保存： 123456789101112[Unit]Description=A rule based proxy in Go for %i.After=network.target[Service]Type=simpleUser=%iRestart=on-abortExecStart=/usr/bin/clash[Install]WantedBy=multi-user.target 重新加载 systemd 模块 user 表示的是当前用户名 1systemctl start clash@user 设置开机自启 1systemctl enable clash@user (转载于此：点我) WPS安装1sudo yay -S wps-office wps-office-mui-zh-cn 这里会安装office三兄弟和中文包 遇到的问题你一打开就给你弹一个报错窗口非常快乐，说缺少字体。But我们不用慌，像其他发行版我们还要自己找字体还要自己装，我们的manjaro就不一样了强大的AUR啥玩意都有，咱又就一个命令解决： 1sudo yay -S ttf-wps-fonts 装好以后，去写文档，喜闻乐见的问题又出现了，wtf我怎么用不了的中文输入法，还是别慌～ 我们把这三个文件/usr/bin/wps、/usr/bin/wpp、/usr/bin/et的开头加上这几句话问题就迎刃而解。 123#!/bin/bashexport XMODIFIERS=\"@im=fcitx\"export QT_IM_MODULE=\"fcitx\" Pip换源在~/.pip/pip.conf中加入一下一句话，没有这个文件就自己创一个： 12[global]index-url = https://pypi.tuna.tsinghua.edu.cn/simple npm换源一行命令非常快乐 1234npm config set registry https://registry.npm.taobao.org #淘宝的源npm config set registry https://registry.npmjs.org/ #官方的源#不想还源可以装一个cnpm，要用npm就把npm改为cnpmnpm install -g cnpm --registry=https://registry.npm.taobao.org 我用的一些软件12345678sudo yay -S albert #一个快速开软件的小工具sudo yay -S chrome #浏览器界的大哥大sudo yay -S netease-cloud-music #网易云sudo yay -S guake #一个用fps引擎写出来的一键呼出的终端sudo yay -S visual-studio-code-bin #vscode个人感觉无敌好用sudo yay -S nvim #一个轻量版的vimsudo yay -S typora #mkdown的编辑器sudo yay -S ranger #终端里的资源管理器 OK,目前我就用了这些东西，还有一些小东西就懒得写了23333,后续还有啥我就后来加吧。","link":"/2020/02/23/Manjaro%E9%85%8D%E7%BD%AE/"},{"title":"快乐又自闭的日常","text":"今天我关注的一个宝藏UP终于更新了，他是在b站上的一个全栈的开发者（栈都溢出了）叫稚晖君。最早关注他是因为他做了一个叫“linux card”的卡片电脑，我对这种小玩意挺感兴趣的。他的那个卡片电脑大概就两个一块钱硬币一样大，不知道比树霉派小到哪里去了。后来他在前几个月预告了一个迷你的服务器，哇我无敌期待。又是那种袖珍的，还放出了概念图。看着麻雀虽小五脏俱全，比一块钱硬币大一点却连显示器都有。一个字NB。今天视频终于做出来了（点我去看！）！视频内容及其硬核，UP啥玩意都是自己搞的，电路设计绘制、主板元件的焊接、软件的编写适配真的无敌，视频还剪的完美，tql。我看完不经感叹人生的一事无成，要是我也会那么多就好了，酸就完事了。我觉得我大学的时候应该大概可能也许差不多会变强吧，谁知道呢。目前在学go我要老老实实的学好，我感觉这个语言挺好的，就是太标新立异了。你说像C吧，他毫无疑问是C家族的，你说他不像吧，他是真的骚把好多地方改的我一点都不适应，记得我非常混乱。 后来我把视频也分享到了空间，我的一位朋友看见了也表示了和我一样的心情，后来聊着聊着就拉去入了linux，日常给linux免费打广告还不要钱，linus打钱!（误）。他用不了电脑我就叫他下个终端去体验linux，反正本质上是一样的。教了他一点命令他产生了兴趣跑去b站学了，然后我就跑来写博客了hhh。想想拉朋友来学电脑好快乐，我也不知道为什么会这样。所以我觉得我对中国软件事业是有帮助的，我拉人入坑说不定就出了大佬呢？","link":"/2020/03/15/%E5%BF%AB%E4%B9%90%E5%8F%88%E8%87%AA%E9%97%AD%E7%9A%84%E6%97%A5%E5%B8%B8/"},{"title":"我要打110了!","text":"非常真实，我有一种可以招Bug的体质，不管搞啥都要掉坑里，碰到各种奇奇怪怪的Bug。今天配置这个Hexo从晚上七点搞到现在。哇第一次上传就非常迷了，界面的排列就完全乱了，貌似是我hexo在clone的时候丢失了什么文件。然后我就把所有文件删掉了，非常真实的事情又发生。第二次跑起来的时候，网站就直接是白的，我佛了。后来就又删了一次重装就好了，非常迷，就不知道是怎么搞的，还好最后还是搭成了。 这个招Bug的体质真的是觉了，直接打110报警了。要是用天气之子里的话来说我就是“百分百的Bug男孩”2333333。","link":"/2020/02/23/%E6%88%91%E8%A6%81%E6%89%93110%E4%BA%86/"},{"title":"红蜻蜓","text":"今天突然想起小学时学过一首霓虹国的歌，也是唯一一首，叫“红蜻蜓”。那时候不记得是二年级还是三年级，听外界各处说霓虹国当年怎么怎么犯下罪行，我当时就非常盲目的讨厌他，那一节课我就一点也没听，我记得老师当时还是叫霓虹语版的，非常高级。后来以为入宅的原因嘛，去了解了霓虹国的文化，有点喜欢，于是就有了今天的事。（当然霓虹政府依然该死，军国主义者biss。）我对这首歌的旋律一点也不记得，我记得老师当时说这是一首在绿本非常受人们喜爱的经典歌曲。我想自己听了那么多绿本流行歌，看看他们经典老歌怎么样，后来…..哎嘛真好听（想去听的话就点我）。原版我也不知道是谁的，但今天听的这个纯音乐版感觉诶非常行！ 所以我这编博客是用来安利歌的。(误) 关于我入宅的经历非常憨批，我今天写作业时候想想就尴尬。当时为了和一个妹子（我们就叫她A）聊得来天然后就去找话题咯。她喜欢看番于是我就去了解了一下，当时和我玩的好的一个妹子（我们叫她B）也喜欢看番，我就叫B给我安利，谁知道这该死的动漫魅力如此之大，我就成二次元了。（呐呐呐呐呐）后来和A发生了一些尴尬的事情就不说了。(黑历史)我入宅的日期依稀记得是486锤白鲸前一个月。想想那时候好尴尬啊，各种发中二的话。But我估计米那桑入宅的时候都是这个样子的吧！de xio？ 所以为什么我能从歌聊到这，我太会聊天了，不愧是我！聊天鬼才","link":"/2020/02/25/%E7%BA%A2%E8%9C%BB%E8%9C%93/"},{"title":"最近有点敏感","text":"才开学一个星期就有点累了，成天脑袋晕糊糊的，不知道以后的日子怎么搞。然后貌似最近还对别人的话非常敏感，还好我现在能保持理智，值得夸奖，晚安。","link":"/2020/05/19/%E6%9C%80%E8%BF%91%E6%9C%89%E7%82%B9%E6%95%8F%E6%84%9F/"},{"title":"生日","text":"今天是昔日的网上朋友的生日，祝他生日快乐。 这让我想起我小时候非常希望能在学校中过一个生日。小时看同学们为寿星过生日很是羡慕，因为某些原因我生日那天总是放假，所以这个愿望一直没完成。Demo（霓虹语但是的意思）今年不一样了，生日那天我算了好几遍了不会放假，非常快乐。想想貌似我貌似没什么朋友，非常真实。 预告一下，我最近要些Word和Excel的教程来复习计算机。最近考试考炸了，我估计计算机应该看一遍就能记会来。本来是打算前天写的结果陪人聊天给咕咕了，昨晚又发生了一些事导致又咕咕了，今晚笔记本忘带了……太真实了。明天一定~","link":"/2020/05/22/%E7%94%9F%E6%97%A5/"}],"tags":[{"name":"ESP32","slug":"ESP32","link":"/tags/ESP32/"},{"name":"hexo","slug":"hexo","link":"/tags/hexo/"},{"name":"Golang","slug":"Golang","link":"/tags/Golang/"},{"name":"生活","slug":"生活","link":"/tags/%E7%94%9F%E6%B4%BB/"},{"name":"Python","slug":"Python","link":"/tags/Python/"},{"name":"Virtualenv","slug":"Virtualenv","link":"/tags/Virtualenv/"},{"name":"Fish","slug":"Fish","link":"/tags/Fish/"},{"name":"Linux","slug":"Linux","link":"/tags/Linux/"},{"name":"Minecraft","slug":"Minecraft","link":"/tags/Minecraft/"},{"name":"想法","slug":"想法","link":"/tags/%E6%83%B3%E6%B3%95/"}],"categories":[{"name":"技术","slug":"技术","link":"/categories/%E6%8A%80%E6%9C%AF/"},{"name":"踩坑","slug":"踩坑","link":"/categories/%E8%B8%A9%E5%9D%91/"},{"name":"胡扯","slug":"胡扯","link":"/categories/%E8%83%A1%E6%89%AF/"},{"name":"日常记录","slug":"日常记录","link":"/categories/%E6%97%A5%E5%B8%B8%E8%AE%B0%E5%BD%95/"},{"name":"游戏","slug":"游戏","link":"/categories/%E6%B8%B8%E6%88%8F/"},{"name":"灵感","slug":"灵感","link":"/categories/%E7%81%B5%E6%84%9F/"}]}